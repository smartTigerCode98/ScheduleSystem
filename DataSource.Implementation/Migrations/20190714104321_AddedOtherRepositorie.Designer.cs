// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ScheduleSystem.DataSource.Implementation;

namespace ScheduleSystem.DataSource.Implementation.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20190714104321_AddedOtherRepositorie")]
    partial class AddedOtherRepositorie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Credits");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("StudentsQuantity");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.LectureHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.ToTable("LectureHalls");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DisciplineId");

                    b.Property<int?>("GroupId");

                    b.Property<int?>("LectureHallId");

                    b.Property<int?>("TeacherId");

                    b.Property<int?>("TypeOfOccupationId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GroupId");

                    b.HasIndex("LectureHallId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TypeOfOccupationId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.ScienceDegree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ScienceDegrees");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("ScienceDegreeId");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("ScienceDegreeId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.TypeOfOccupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TypeOfOccupations");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("ScheduleSystem.Domain.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("ScheduleSystem.Domain.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ScheduleSystem.Domain.Entities.LectureHall", "LectureHall")
                        .WithMany()
                        .HasForeignKey("LectureHallId");

                    b.HasOne("ScheduleSystem.Domain.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.HasOne("ScheduleSystem.Domain.Entities.TypeOfOccupation", "TypeOfOccupation")
                        .WithMany()
                        .HasForeignKey("TypeOfOccupationId");
                });

            modelBuilder.Entity("ScheduleSystem.Domain.Entities.Teacher", b =>
                {
                    b.HasOne("ScheduleSystem.Domain.Entities.ScienceDegree", "ScienceDegree")
                        .WithMany()
                        .HasForeignKey("ScienceDegreeId");
                });
#pragma warning restore 612, 618
        }
    }
}
